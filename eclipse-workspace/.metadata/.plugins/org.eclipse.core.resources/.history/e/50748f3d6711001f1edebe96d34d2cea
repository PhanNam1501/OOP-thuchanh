package Selenium;
import org.bson.Document;
import com.mongodb.ConnectionString;
import com.mongodb.MongoClientSettings;
import com.mongodb.MongoException;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.BasicDBObject;
import org.bson.types.ObjectId;
import com.mongodb.client.model.Filters;
import com.mongodb.client.FindIterable;
import com.mongodb.MongoClientSettings;
import com.mongodb.ConnectionString;
import org.bson.conversions.Bson;
import com.mongodb.client.model.Filters;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCursor;
import org.bson.Document;
import org.bson.types.ObjectId;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.regex.Pattern;



public class GetContent {
	public static Document getDocumentByFieldName(String id) {
		 String connectionString = "mongodb+srv://tuannamle256:k3lGLGcBHFvYgto9@phannam.t93kh0q.mongodb.net/?retryWrites=true&w=majority&appName=PhanNam";
         MongoClientSettings settings = MongoClientSettings.builder()
                 .applyConnectionString(new ConnectionString(connectionString))
                 .build();
        try (MongoClient mongoClient = MongoClients.create(settings)) {
            MongoDatabase database = mongoClient.getDatabase("data");
            MongoCollection<Document> collection = database.getCollection("mycollection");
            Bson filter = Filters.eq("_id", new ObjectId(id));
            FindIterable<Document> documents = collection.find(filter);
            for (Document document : documents) {
            	System.out.println("Done1");
                System.out.println(document.toJson());
            }
  
        } catch (MongoException e) {
            e.printStackTrace();
        }
		return null;
	}

    public static void main(String[] args) {
    	getDocumentByFieldName("66426e9cc23d7741b25d46c7");
    	System.out.println("Done4");
    }

}
